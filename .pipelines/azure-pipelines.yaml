# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


trigger:
- main

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight build
  branches:
    include:
    - main
  always: true

pool:
 vmImage: ubuntu-latest

strategy:
  matrix:
    Python310:
      python.version: '3.10'
      torch.version: '2.3'
    Python311:
      python.version: '3.11'
      torch.version: '2.4'
    Python312:
      python.version: '3.12'
      torch.version: '2.5'
    Python313:
      python.version: '3.13'
      torch.version: '2.6'

variables:
  CodeQL.Enabled: true
  LGTM.UploadSnapshot: true

steps:
- task: CodeQL3000Init@0

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    sudo apt-get update
    sudo apt-get install -y nvidia-cuda-toolkit
    nvcc --version    
    python -m pip install --upgrade pip
    if [[ "$PYTHON_VERSION" < "3.12" ]]; then
      pip install wheel
    fi
    pip install torch==$(torch.version) packaging==25.0 hatchling>=1.26
    pip install . --no-build-isolation
  displayName: 'Install dependencies'

- task: ComponentGovernanceComponentDetection@0
  inputs:
    scanType: 'Register'
    verbosity: 'Verbose'
    alertWarningLevel: 'High'

- task: Bandit@1
  inputs:
    targetsType: 'guardianGlob'
    targets: 'f|**/*.py;-|.gdn/**'
    ruleset: 'guardian'

- task: CodeQL3000Finalize@0

- script: |
    echo done.
  displayName: 'done.'
